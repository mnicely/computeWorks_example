FROM nvcr.io/nvidia/cuda:latest

##################################################################################################
## Run the following command to build Docker images                                             ##
## docker build -t pgi_19.10 -f Dockerfile.cuda-10.1_ubuntu-18.04_pgi-19.10 .                     ##
##################################################################################################
## To use --squash, experimental must be set in Docker settings                                 ##
## Modify /etc/docker/daemon.json                                                               ##
##                                                                                              ##
## Also, graph changes the storage of Docker images for /var/ to chosen directory               ##
##                                                                                              ##
## {                                                                                            ##
##     "runtimes": {                                                                            ##
##         "nvidia": {                                                                          ##
##             "path": "nvidia-container-runtime",                                              ##
##             "runtimeArgs": []                                                                ##
##         }                                                                                    ##
##     },                                                                                       ##
##    "experimental": true,                                                                     ##
##	  "graph": "/home/<whoami>/.docker",                                                        ##
##	  "storage-driver": "overlay2"                                                              ##
## }                                                                                            ##
##################################################################################################
## Run the following command to start Docker image                                              ##
## docker run -it --rm --runtime=nvidia --name pgi \                                            ##
##			-v /home/<whoami>/<computeWorks_mm dir>:/computeWorks_mm \                          ##
##			-w /computeWorks_mm pgi_19.10:latest /bin/bash                                       ##
##                                                                                              ##
## Once in the Docker image, run nvidia-smi to confirm you have access to the GPUs              ##
##                                                                                              ##
##################################################################################################

SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive

# Install PGI
ENV PGI_VERSION 19.10
ENV PGI_INSTALL_DIR /opt/pgi
ENV PGI_HOME    ${PGI_INSTALL_DIR}/linux86-64/${PGI_VERSION}
ENV PGI_BIN_DIR ${PGI_HOME}/bin
ENV PGI_LIB_DIR ${PGI_HOME}/lib
ENV PGI_MAN_DIR ${PGI_HOME}/man

## Install PGI Compilers
## The PGI compilers will need to be downloaded manually from
## https://www.pgroup.com/support/download_community.php?file=pgi-community-linux-x64
## Place in current directory
## Modify file below based on your download
ADD pgilinux-2019-1910-x86-64.tar.gz /tmp

RUN export PGI_SILENT=true && \
    export PGI_ACCEPT_EULA=accept && \
    export PGI_INSTALL_NVIDIA=true && \
    export PGI_INSTALL_MANAGED=false && \
    export PGI_INSTALL_AMD=false && \
    export PGI_INSTALL_JAVA=false && \
    export PGI_INSTALL_MPI=false && \
    export PGI_MPI_GPU_SUPPORT=false && \
    /tmp/install && \
    rm -rf /tmp/*

RUN echo "${PGI_LIB_DIR}" >> /etc/ld.so.conf.d/pgi.conf

ENV PATH            ${PGI_BIN_DIR}:${PATH}
ENV LD_LIBRARY_PATH ${PGI_LIB_DIR}:/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH}
ENV MANPATH         ${PGI_MAN_DIR}:${MANPATH}
ENV PGI_ACC_TIME=1

## Labels
LABEL pgi_version "2019.10"

